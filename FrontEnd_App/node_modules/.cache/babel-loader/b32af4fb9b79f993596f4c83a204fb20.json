{"ast":null,"code":"\"use strict\";\n\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport { SIMP_STORAGE_ADDRESS, SIMP_STORAGE_ABI } from './config.js';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport \"./App.css\";\nimport QrReader from 'react-qr-reader';\nimport { Col, Row, Card } from 'react-bootstrap';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      result: 'No result'\n    };\n\n    this.handleScan = data => {\n      if (data) {\n        this.setState({\n          result: data,\n          msg: \"Scan Successful\",\n          dis: false\n        });\n      }\n    };\n\n    this.handleError = err => {\n      console.error(err);\n    };\n\n    this.state = {\n      account: \"No address associated\",\n      val: \"\",\n      result: \" \",\n      dis: true,\n      msg: \"Hold still!\",\n      msg2: \"\",\n      simpcontract: '',\n      value: \"\",\n      value2: \"\",\n      hash: \"\",\n      hash2: \"\",\n      isverify: \"\",\n      va: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.loadBlockchainData();\n    this.loadBlockchainData();\n  }\n\n  async loadBlockchainData() {\n    const web3 = new Web3(\"HTTP://127.0.0.1:7545\");\n    const simpstorage = new web3.eth.Contract(SIMP_STORAGE_ABI, SIMP_STORAGE_ADDRESS);\n    this.setState({\n      simpcontract: simpstorage\n    });\n    var msg = '';\n  }\n\n  async sign(web3, text, addr) {\n    await web3.eth.sign('0x' + this.toHex(text), addr).then(result => {\n      this.setState({\n        signature: result.substr(2)\n      });\n    });\n    this.state.r = this.state.signature.slice(0, 64);\n    this.state.s = this.state.signature.slice(64, 128);\n    this.state.v = this.state.signature.slice(128, 130); //this.state.v_dec=web3.utils.toDecimal(this.state.v)\n\n    console.log(this.state.signature);\n    console.log(this.state.r);\n    console.log(this.state.s);\n    console.log(this.state.v_dec);\n  }\n\n  async getHashQR(cnic, simpstorage) {\n    const value = await simpstorage.methods.calculateHash(cnic).call().then(res => {\n      this.setState({\n        hash: res\n      });\n    }); // this.setState({value: value})\n    // console.log(this.state.value)\n  }\n\n  async getHash(cnic, simpstorage) {\n    const value = await simpstorage.methods.calculateHash(cnic).call().then(res => {\n      this.setState({\n        hash2: res\n      });\n    });\n  }\n\n  parsePetitionList(str) {\n    // return str\n    var str2 = \"\";\n    var x = str.split(\",\");\n\n    for (var i = 0; i < x.length; i++) {\n      str2 += \"\\npetitioner: \";\n      str2 += x[i];\n      str2 += \"\\nname: \";\n      str2 += x[i + 1];\n      str2 += \", time: \";\n      str2 += x[i + 2];\n      str2 += \", votes: \";\n      str2 += x[i + 3];\n      str2 += \"\\n\";\n      i += parseInt(x[i + 3]);\n\n      if (parseInt(x[i + 3]) == 0) {\n        i++;\n      }\n\n      i += 3;\n      i++;\n      str2 += \"\\n\";\n    }\n\n    return str2;\n  }\n\n  toHex(str) {\n    var hex = '';\n\n    for (var i = 0; i < str.length; i++) {\n      hex += '' + str.charCodeAt(i).toString(16);\n    }\n\n    return hex;\n  }\n\n  async getUserData(id, simpstorage) {\n    const value = await simpstorage.methods.getVaccinationRecord(id.toString()).call({\n      from: this.state.account\n    }).catch(error => {\n      alert(\"User Vaccination record doesn't exist/ Not Authorized\");\n    });\n    console.log(value);\n\n    if (value != null) {\n      const val = this.parseUserData(value.toString());\n      this.setState({\n        value: val.toString()\n      });\n    } else {\n      this.setState({\n        value: \"not found\"\n      });\n    }\n  }\n\n  async getUserDataForOthers(id, simpstorage) {\n    const value = await simpstorage.methods.getVaccinationHash(id.toString()).call().catch(error => {\n      alert(\"User Vaccination record doesn't exist\");\n    });\n\n    if (value != null) {\n      this.setState({\n        value2: value\n      });\n\n      if (this.state.hash == this.state.value2) {\n        this.setState({\n          isverify: \"QR Verified with Blockchain\"\n        });\n      } else if (this.state.hash2 == this.state.value2) {\n        this.setState({\n          isverify: \"Hash Verified with Blockchain\"\n        });\n      } else {\n        this.setState({\n          isverify: \"Hash DOES NOT Verify with Blockchain\"\n        });\n      }\n    }\n  }\n\n  parseUserData(str) {\n    // return str\n    var str2 = \"\";\n    var x = str.split(\",\");\n\n    for (var i = 0; i < x.length; i++) {\n      if (i == 0) {\n        str2 += \"\\nCnic/id: \";\n        str2 += x[i];\n      } else if (i == 1) {\n        str2 += \"\\nUser_address: \";\n        str2 += x[i];\n      } else if (i == 2) {\n        str2 += \"\\nCountry: \";\n        str2 += x[i];\n      } else if (i == 3) {\n        str2 += \", Name: \";\n        str2 += x[i];\n      } else if (i == 4) {\n        str2 += \", Gender: \"; // str2 += x[i]\n\n        if (x[i] == \"false\") {\n          str2 += \"Male\";\n        } else if (x[i] == \"true\") {\n          str2 += \"Female\";\n        }\n      } else if (i == 5) {\n        str2 += \"\\nCreated by: \";\n        str2 += x[i];\n      } else if (i == 6) {\n        str2 += \"\\nHash: \";\n        str2 += x[i];\n      } else {\n        str2 += \"\\nVaccination: \";\n        str2 += x[i];\n        str2 += \",BatchID: \";\n        str2 += x[i + 1];\n        str2 += \"\\nAdded by: \";\n        str2 += x[i + 2];\n        str2 += \",AdministrationDate: \";\n        str2 += x[i + 3];\n        str2 += \", Location: \";\n        str2 += x[i + 4];\n        i += 4;\n      }\n    }\n\n    return str2;\n  }\n\n  async getPetitionData(simpstorage) {\n    const val = await simpstorage.methods.viewPetitions().call();\n    const val2 = this.parsePetitionList(val.toString());\n    this.setState({\n      petitions: val2\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    e.target.reset();\n  }\n\n  async getVAData(simpstorage) {\n    const value = await simpstorage.methods.getVaccinationAuthorities().call();\n    const val = this.parseList(value.toString());\n    this.setState({\n      va: val\n    });\n  }\n\n  async getmsg() {\n    this.setState({\n      msg2: \"Vote Casted\"\n    });\n  }\n\n  parseList(str) {\n    var str2 = '';\n\n    for (var i = 0; i < str.length; i++) {\n      if (str[i] == \",\") {\n        str2 += \"\\n\";\n      } else {\n        str2 += str[i];\n      }\n    }\n\n    return str2;\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/DELL/Desktop/major-project/FrontEnd_App/src/App.js"],"names":["React","Component","Web3","SIMP_STORAGE_ADDRESS","SIMP_STORAGE_ABI","Tab","Tabs","TabList","TabPanel","QrReader","Col","Row","Card","App","constructor","state","result","handleScan","data","setState","msg","dis","handleError","err","console","error","account","val","msg2","simpcontract","value","value2","hash","hash2","isverify","va","componentDidMount","loadBlockchainData","web3","simpstorage","eth","Contract","sign","text","addr","toHex","then","signature","substr","r","slice","s","v","log","v_dec","getHashQR","cnic","methods","calculateHash","call","res","getHash","parsePetitionList","str","str2","x","split","i","length","parseInt","hex","charCodeAt","toString","getUserData","id","getVaccinationRecord","from","catch","alert","parseUserData","getUserDataForOthers","getVaccinationHash","getPetitionData","viewPetitions","val2","petitions","handleSubmit","e","preventDefault","target","reset","getVAData","getVaccinationAuthorities","parseList","getmsg"],"mappings":"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","sourcesContent":["\"use strict\";\nimport React, {Component} from 'react';\nimport Web3 from 'web3'\nimport {SIMP_STORAGE_ADDRESS, SIMP_STORAGE_ABI} from './config.js'\n\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport \"./App.css\"\nimport QrReader from 'react-qr-reader'\nimport { Col,Row,Card } from 'react-bootstrap';\n\n\nclass App extends Component {\n  state = {\n    result: 'No result'\n  }\n\n  handleScan = data => {\n    if (data) {\n      this.setState({\n        result: data,\n        msg: \"Scan Successful\",\n        dis: false\n      })\n    }\n  }\n  handleError = err => {\n    console.error(err)\n  }\n\n  constructor() {\n    super()\n    this.state = {\n      account:\"No address associated\",\n      val:\"\",\n      result: \" \",\n      dis: true,\n      msg: \"Hold still!\",\n      msg2: \"\",\n      simpcontract: '',\n      value:\"\",\n      value2:\"\",\n      hash:\"\",\n      hash2:\"\",\n      isverify:\"\",\n      va:\"\"\n    }\n\n  }\n\n  componentDidMount() {\n    this.loadBlockchainData()\n    this.loadBlockchainData()\n  }\n\n  async loadBlockchainData() {\n    const web3 = new Web3(\"HTTP://127.0.0.1:7545\")\n    const simpstorage = new web3.eth.Contract(SIMP_STORAGE_ABI, SIMP_STORAGE_ADDRESS);\n    this.setState({simpcontract: simpstorage})\n\n    var msg = '';\n\n  }\n\n  async sign(web3, text, addr) {\n    await web3.eth.sign('0x' + this.toHex(text), addr).then(result => {\n      this.setState({\n        signature: result.substr(2)\n      })\n    })\n    this.state.r = this.state.signature.slice(0, 64)\n    this.state.s = this.state.signature.slice(64, 128)\n    this.state.v = this.state.signature.slice(128, 130)\n    //this.state.v_dec=web3.utils.toDecimal(this.state.v)\n    console.log(this.state.signature)\n    console.log(this.state.r)\n    console.log(this.state.s)\n    console.log(this.state.v_dec)\n\n  }\n\n  async getHashQR(cnic, simpstorage) {\n\n    const value = await simpstorage.methods.calculateHash(cnic).call().then(res => {\n      this.setState({hash: res})\n    })\n\n    // this.setState({value: value})\n    // console.log(this.state.value)\n  }\n  async getHash(cnic, simpstorage) {\n    const value = await simpstorage.methods.calculateHash(cnic).call().then(res => {\n    this.setState({hash2: res})\n  })\n}\n  parsePetitionList(str){\n    // return str\n    var str2=\"\"\n    var x= str.split(\",\")\n    for(var i=0;i<x.length;i++){\n\n      str2+=\"\\npetitioner: \"\n      str2+=x[i]\n\n      str2+=\"\\nname: \"\n      str2+=x[i+1]\n\n      str2+=\", time: \"\n      str2+=x[i+2]\n\n      str2+=\", votes: \"\n      str2+=x[i+3]\n      str2+=\"\\n\"\n      i+=parseInt(x[i+3])\n      if (parseInt(x[i+3])==0){i++}\n      i+=3\n      i++\n      str2+=\"\\n\"\n\n    }\n    return str2;\n\n  }\n\n  toHex(str) {\n    var hex = ''\n    for(var i=0;i<str.length;i++) {\n      hex += ''+str.charCodeAt(i).toString(16)\n    }\n    return hex\n  }\n\n  async getUserData(id, simpstorage){\n    const value = await simpstorage.methods.getVaccinationRecord(id.toString()).call({from: this.state.account}).catch((error) => {alert(\"User Vaccination record doesn't exist/ Not Authorized\")})\n    console.log(value)\n\n    if( value!=null) {\n      const val=this.parseUserData(value.toString())\n      this.setState({value: val.toString()})\n    }\n    else{\n      this.setState({value: \"not found\"})\n    }\n  }\n  async getUserDataForOthers(id, simpstorage){\n    const value = await simpstorage.methods.getVaccinationHash(id.toString()).call().catch((error) => {alert(\"User Vaccination record doesn't exist\")})\n\n    if( value!=null) {\n      this.setState({value2: value})\n      if(this.state.hash==this.state.value2 ){\n        this.setState({isverify: \"QR Verified with Blockchain\"})\n\n      }\n      else if(this.state.hash2==this.state.value2){\n        this.setState({isverify: \"Hash Verified with Blockchain\"})\n      }\n      else{\n        this.setState({isverify: \"Hash DOES NOT Verify with Blockchain\"})\n      }\n    }\n  }\n  parseUserData(str){\n    // return str\n    var str2=\"\"\n    var x= str.split(\",\")\n    for(var i=0;i<x.length;i++) {\n      if (i  == 0) {\n        str2 += \"\\nCnic/id: \"\n        str2 += x[i]\n      } else if (i == 1) {\n        str2 += \"\\nUser_address: \"\n        str2 += x[i]\n      } else if (i == 2) {\n        str2 += \"\\nCountry: \"\n        str2 += x[i]\n      } else if (i  == 3) {\n        str2 += \", Name: \"\n        str2 += x[i]\n      } else if (i == 4) {\n        str2 += \", Gender: \"\n        // str2 += x[i]\n        if(x[i]==\"false\"){str2 += \"Male\"}\n        else if(x[i]==\"true\"){str2 += \"Female\"}\n      }\n      else if (i == 5) {\n        str2 += \"\\nCreated by: \"\n        str2 += x[i]\n      } else if (i == 6) {\n        str2 += \"\\nHash: \"\n        str2 += x[i]\n\n      }\n  else{\n\n        str2 += \"\\nVaccination: \"\n        str2+=x[i]\n        str2 += \",BatchID: \"\n        str2+=x[i+1]\n        str2 += \"\\nAdded by: \"\n        str2+=x[i+2]\n        str2 += \",AdministrationDate: \"\n        str2+=x[i+3]\n        str2 += \", Location: \"\n        str2+=x[i+4]\n        i+=4\n\n      }\n    }\n\n    return str2;\n\n  }\n  async getPetitionData( simpstorage){\n    const val = await simpstorage.methods.viewPetitions().call()\n    const val2=this.parsePetitionList(val.toString())\n    this.setState({ petitions:val2   })\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n    e.target.reset();\n  }\n  async getVAData( simpstorage){\n    const value = await simpstorage.methods.getVaccinationAuthorities().call()\n    const val = this.parseList(value.toString())\n    this.setState({ va: val })\n  }\n  async getmsg( ){\n    this.setState({ msg2: \"Vote Casted\"})\n  }\n  parseList(str){\n    var str2 = ''\n    for(var i=0;i<str.length;i++) {\n      if (str[i]==\",\") {\n        str2 += \"\\n\"\n      }\n      else{\n        str2 += str[i]\n      }\n    }\n    return str2\n  }\n \n}\nexport default App;"]},"metadata":{},"sourceType":"module"}